package iot.xlogistx.iot.device;

import io.xlogistx.iot.device.shared.COMM;
import io.xlogistx.iot.device.shared.IOTConst;
import io.xlogistx.iot.device.shared.IOTDeviceInfo;
import io.xlogistx.iot.device.shared.Port;
import org.junit.jupiter.api.Test;
import org.zoxweb.server.util.GSONUtil;
import org.zoxweb.shared.util.SharedStringUtil;
import org.zoxweb.shared.util.SharedUtil;

import java.io.IOException;

public class DeviceInfoTest {

    @Test
    public void createDeviceInfo() throws IOException {
        IOTDeviceInfo dev = new IOTDeviceInfo();
        dev.setDeviceID("asas");
        dev.setCPUSpeed(8);
        dev.setFrequencyUnit(IOTConst.FrequencyUnit.MHZ);
        dev.setCPUID("attiny84");
        Port port = new Port();
        port.setID("A");
        port.setPin("5a");
        port.setSensorType(IOTConst.SensorType.WATER_LEVEL);
        port.setPortState(IOTConst.PortState.INPUT);
        dev.setPorts(new Port("1", IOTConst.PortState.INPUT, IOTConst.PortType.DIGITAL),
                new Port("2", IOTConst.PortState.OUTPUT, IOTConst.PortType.DIGITAL),
                new Port("3", IOTConst.PortState.OUTPUT, IOTConst.PortType.DIGITAL),
                port);
        dev.setCOMM(new COMM(IOTConst.Protocol.I2C, 100, IOTConst.FrequencyUnit.KHZ));
        String json = GSONUtil.toJSON(dev, false, false, false);
        dev = GSONUtil.fromJSON(json,IOTDeviceInfo.class);
        String json1 = GSONUtil.toJSON(dev, false, false, false);
        System.out.println(json.replaceAll("\"", "\\\""));
        System.out.println(json1);
        System.out.println(json.equals(json1) + " " + SharedStringUtil.getBytes(json).length);

        System.out.println(SharedStringUtil.formatStringToByteArray(json1, false));
        byte data[] = {0x7B,0x22,0x69,0x64,0x22,0x3A,0x22,0x61,0x73,0x61,0x73,0x22,0x2C,0x22,0x63,0x70,0x75,0x5F,0x69,0x64,0x22,0x3A,0x22,0x61,0x74,0x74,0x69,0x6E,0x79,0x38,0x34,0x22,0x2C,0x22,0x63,0x70,0x75,0x5F,0x73,0x70,0x65,0x65,0x64,0x22,0x3A,0x38,0x2E,0x30,0x2C,0x22,0x66,0x72,0x65,0x71,0x5F,0x75,0x6E,0x69,0x74,0x22,0x3A,0x22,0x4D,0x48,0x5A,0x22,0x2C,0x22,0x63,0x6F,0x6D,0x6D,0x22,0x3A,0x7B,0x22,0x70,0x72,0x6F,0x74,0x6F,0x22,0x3A,0x22,0x49,0x32,0x43,0x22,0x2C,0x22,0x66,0x72,0x65,0x71,0x22,0x3A,0x31,0x30,0x30,0x2E,0x30,0x2C,0x22,0x66,0x72,0x65,0x71,0x5F,0x75,0x6E,0x69,0x74,0x22,0x3A,0x22,0x4B,0x48,0x5A,0x22,0x7D,0x2C,0x22,0x70,0x6F,0x72,0x74,0x73,0x22,0x3A,0x5B,0x7B,0x22,0x69,0x64,0x22,0x3A,0x22,0x31,0x22,0x2C,0x22,0x74,0x79,0x70,0x65,0x22,0x3A,0x22,0x44,0x49,0x47,0x49,0x54,0x41,0x4C,0x22,0x2C,0x22,0x73,0x74,0x61,0x74,0x65,0x22,0x3A,0x22,0x49,0x4E,0x50,0x55,0x54,0x22,0x7D,0x2C,0x7B,0x22,0x69,0x64,0x22,0x3A,0x22,0x32,0x22,0x2C,0x22,0x74,0x79,0x70,0x65,0x22,0x3A,0x22,0x44,0x49,0x47,0x49,0x54,0x41,0x4C,0x22,0x2C,0x22,0x73,0x74,0x61,0x74,0x65,0x22,0x3A,0x22,0x4F,0x55,0x54,0x50,0x55,0x54,0x22,0x7D,0x2C,0x7B,0x22,0x69,0x64,0x22,0x3A,0x22,0x33,0x22,0x2C,0x22,0x74,0x79,0x70,0x65,0x22,0x3A,0x22,0x44,0x49,0x47,0x49,0x54,0x41,0x4C,0x22,0x2C,0x22,0x73,0x74,0x61,0x74,0x65,0x22,0x3A,0x22,0x4F,0x55,0x54,0x50,0x55,0x54,0x22,0x7D,0x2C,0x7B,0x22,0x69,0x64,0x22,0x3A,0x22,0x41,0x22,0x2C,0x22,0x70,0x69,0x6E,0x22,0x3A,0x22,0x35,0x61,0x22,0x2C,0x22,0x73,0x74,0x61,0x74,0x65,0x22,0x3A,0x22,0x49,0x4E,0x50,0x55,0x54,0x22,0x2C,0x22,0x73,0x65,0x6E,0x73,0x6F,0x72,0x22,0x3A,0x22,0x57,0x41,0x54,0x45,0x52,0x5F,0x4C,0x45,0x56,0x45,0x4C,0x22,0x7D,0x5D,0x7D};
        System.out.println(new String(data));


    }

    @Test
    public void readDeviceInfo() throws IOException {
        String json = "{\"id\":\"asas\",\"cpu_id\":\"attiny84\",\"cpu_speed\":8.0,\"freq_unit\":\"M\",\"comm\":{\"proto\":\"I2C\",\"freq\":100.0,\"freq_unit\":\"K\"},\"ports\":[{\"id\":\"1\",\"type\":\"DIGITAL\",\"state\":\"I\"},{\"id\":\"2\",\"type\":\"DIGITAL\",\"state\":\"O\"},{\"id\":\"3\",\"type\":\"DIGITAL\",\"state\":\"O\"},{\"id\":\"A\",\"pin\":\"5a\",\"state\":\"I\",\"sensor\":\"WATER_LEVEL\"}]}";
        IOTDeviceInfo dev = GSONUtil.fromJSON(json,IOTDeviceInfo.class);
        String json1 = GSONUtil.toJSON(dev, false, false, false);
        System.out.println(json1);
        System.out.println(json.equals(json1) + " " + SharedStringUtil.getBytes(json).length + " " + SharedStringUtil.getBytes(json1).length);

    }




}
